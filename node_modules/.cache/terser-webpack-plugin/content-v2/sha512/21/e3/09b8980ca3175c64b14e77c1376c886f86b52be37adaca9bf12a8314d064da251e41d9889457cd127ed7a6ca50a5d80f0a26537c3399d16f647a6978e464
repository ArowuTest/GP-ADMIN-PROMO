{"map":"{\"version\":3,\"sources\":[\"C:/Users/sanus/Documents/home/ubuntu/GP-ADMIN-PROMO/src/types/common.ts\",\"C:/Users/sanus/Documents/home/ubuntu/GP-ADMIN-PROMO/src/services/authManager.ts\",\"C:/Users/sanus/Documents/home/ubuntu/GP-ADMIN-PROMO/src/services/apiClient.ts\",\"C:/Users/sanus/Documents/home/ubuntu/GP-ADMIN-PROMO/src/services/authService.ts\",\"C:/Users/sanus/Documents/home/ubuntu/GP-ADMIN-PROMO/src/contexts/AuthContext.tsx\",\"C:/Users/sanus/Documents/home/ubuntu/GP-ADMIN-PROMO/src/components/layout/Header/Header.tsx\",\"C:/Users/sanus/Documents/home/ubuntu/GP-ADMIN-PROMO/src/components/layout/Sidebar/Sidebar.tsx\",\"C:/Users/sanus/Documents/home/ubuntu/GP-ADMIN-PROMO/src/components/layout/AppLayout/AppLayout.tsx\",\"C:/Users/sanus/Documents/home/ubuntu/GP-ADMIN-PROMO/src/components/dashboard/MetricCard/MetricCard.tsx\",\"C:/Users/sanus/Documents/home/ubuntu/GP-ADMIN-PROMO/src/components/dashboard/ActivityFeed/ActivityFeed.tsx\",\"C:/Users/sanus/Documents/home/ubuntu/GP-ADMIN-PROMO/src/components/dashboard/StatusIndicator/StatusIndicator.tsx\",\"C:/Users/sanus/Documents/home/ubuntu/GP-ADMIN-PROMO/src/pages/Dashboard/Dashboard.tsx\",\"C:/Users/sanus/Documents/home/ubuntu/GP-ADMIN-PROMO/src/pages/DrawManagement/DrawManagementPage.tsx\",\"C:/Users/sanus/Documents/home/ubuntu/GP-ADMIN-PROMO/src/pages/Login/LoginPage.tsx\",\"C:/Users/sanus/Documents/home/ubuntu/GP-ADMIN-PROMO/src/pages/NotFound/NotFoundPage.tsx\",\"C:/Users/sanus/Documents/home/ubuntu/GP-ADMIN-PROMO/src/pages/ParticipantManagement/ParticipantManagementPage.tsx\",\"C:/Users/sanus/Documents/home/ubuntu/GP-ADMIN-PROMO/src/pages/PrizeStructure/PrizeStructurePage.tsx\",\"C:/Users/sanus/Documents/home/ubuntu/GP-ADMIN-PROMO/src/pages/Reports/ReportsPage.tsx\",\"C:/Users/sanus/Documents/home/ubuntu/GP-ADMIN-PROMO/src/pages/UserManagement/UserManagementPage.tsx\",\"C:/Users/sanus/Documents/home/ubuntu/GP-ADMIN-PROMO/src/App.tsx\",\"C:/Users/sanus/Documents/home/ubuntu/GP-ADMIN-PROMO/src/index.tsx\"],\"names\":[\"UserRole\",\"Permission\",\"TOKEN_KEY\",\"USER_KEY\",\"getUser\",\"userData\",\"localStorage\",\"getItem\",\"JSON\",\"parse\",\"error\",\"console\",\"getTokenExpiry\",\"getPermissions\",\"permissionsData\",\"isTokenExpired\",\"expiryTime\",\"Date\",\"authManager\",\"storeToken\",\"token\",\"setItem\",\"getToken\",\"storeRefreshToken\",\"refreshToken\",\"getRefreshToken\",\"storeUser\",\"user\",\"stringify\",\"storeTokenExpiry\",\"storePermissions\",\"permissions\",\"clearAuthData\",\"removeItem\",\"hasRole\",\"requiredRole\",\"requiredRoles\",\"Array\",\"isArray\",\"userRole\",\"role\",\"SUPER_ADMIN\",\"includes\",\"hasPermission\",\"permission\",\"length\",\"[object Object]\",\"VIEW_DASHBOARD\",\"EXECUTE_DRAW\",\"MANAGE_DRAWS\",\"MANAGE_PRIZE_STRUCTURES\",\"MANAGE_PARTICIPANTS\",\"UPLOAD_PARTICIPANTS\",\"VIEW_WINNERS\",\"MANAGE_WINNERS\",\"MANAGE_USERS\",\"RESET_PASSWORDS\",\"VIEW_REPORTS\",\"MANAGE_NOTIFICATIONS\",\"ADMIN\",\"SENIOR_USER\",\"WINNERS_REPORT_USER\",\"ALL_REPORT_USER\",\"checkAndRefreshTokenIfNeeded\",\"async\",\"activeRequests\",\"Map\",\"apiClient\",\"axios\",\"create\",\"baseURL\",\"process\",\"REACT_APP_API_BASE_URL\",\"timeout\",\"headers\",\"Content-Type\",\"Accept\",\"getRequestKey\",\"config\",\"concat\",\"method\",\"url\",\"params\",\"interceptors\",\"request\",\"use\",\"_config$method\",\"_config$method2\",\"_objectSpread\",\"Authorization\",\"log\",\"toUpperCase\",\"warn\",\"withCredentials\",\"requestKey\",\"has\",\"source\",\"get\",\"cancel\",\"delete\",\"cancelPreviousRequests\",\"CancelToken\",\"cancelToken\",\"set\",\"Promise\",\"reject\",\"response\",\"_response$config$meth\",\"status\",\"data\",\"success\",\"isCancel\",\"message\",\"_error$config\",\"_error$config$method\",\"_error$config2\",\"authErrorEvent\",\"CustomEvent\",\"detail\",\"window\",\"dispatchEvent\",\"details\",\"_error$config3\",\"_error$config3$method\",\"_error$config4\",\"enhancedApiClient\",\"getPaginated\",\"post\",\"put\",\"getAuthHeaders\",\"cancelAllRequests\",\"arguments\",\"undefined\",\"forEach\",\"clear\",\"instance\",\"needsTokenRefresh\",\"expiryDate\",\"now\",\"fiveMinutes\",\"getTime\",\"authService\",\"login\",\"loginPayload\",\"Email\",\"credentials\",\"username\",\"Password\",\"password\",\"expiry\",\"err\",\"Error\",\"logout\",\"logoutEvent\",\"checkAuthState\",\"getCurrentUser\",\"refreshTokenIfNeeded\",\"AuthContext\",\"createContext\",\"isAuthenticated\",\"isLoading\",\"useAuth\",\"useContext\",\"AuthProvider\",\"_ref\",\"children\",\"setUser\",\"useState\",\"setIsLoading\",\"navigate\",\"useNavigate\",\"useEffect\",\"currentUser\",\"checkAuth\",\"value\",\"email\",\"React\",\"createElement\",\"Provider\",\"Header\",\"className\",\"Fragment\",\"fullName\",\"onClick\",\"Sidebar\",\"filteredNavItems\",\"path\",\"label\",\"icon\",\"roles\",\"filter\",\"item\",\"map\",\"key\",\"NavLink\",\"to\",\"isActive\",\"AppLayout\",\"Outlet\",\"MetricCard\",\"title\",\"trend\",\"trendValue\",\"ActivityFeed\",\"activities\",\"propActivities\",\"id\",\"type\",\"action\",\"timestamp\",\"activity\",\"toString\",\"getActivityIcon\",\"description\",\"date\",\"Intl\",\"DateTimeFormat\",\"month\",\"day\",\"hour\",\"minute\",\"format\",\"formatTimestamp\",\"StatusIndicator\",\"name\",\"lastUpdated\",\"statusInfo\",\"getStatusInfo\",\"Dashboard\",\"metrics\",\"setMetrics\",\"totalDraws\",\"activeDraws\",\"totalParticipants\",\"totalWinners\",\"systemStatus\",\"loading\",\"setLoading\",\"resolve\",\"setTimeout\",\"fetchDashboardData\",\"toLocaleString\",\"DrawManagementPage\",\"timer\",\"clearTimeout\",\"LoginPage\",\"setEmail\",\"setPassword\",\"setError\",\"onSubmit\",\"e\",\"preventDefault\",\"trim\",\"htmlFor\",\"onChange\",\"target\",\"placeholder\",\"disabled\",\"NotFoundPage\",\"Link\",\"ParticipantManagementPage\",\"PrizeStructurePage\",\"ReportsPage\",\"UserManagementPage\",\"ProtectedRoute\",\"element\",\"Navigate\",\"App\",\"Router\",\"Routes\",\"Route\",\"Login\",\"index\",\"replace\",\"DrawManagement\",\"ParticipantManagement\",\"PrizeStructure\",\"UserManagement\",\"Reports\",\"NotFound\",\"ReactDOM\",\"createRoot\",\"document\",\"getElementById\",\"render\",\"StrictMode\"],\"mappings\":\"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\",\"sourcesContent\":[\"// src/types/common.ts\\n/**\\n * Common type definitions\\n */\\n\\nexport type UUID = string;\\n\\n/**\\n * Draw status enum\\n */\\nexport enum DrawStatus {\\n  PENDING = 'PENDING',\\n  COMPLETED = 'COMPLETED',\\n  FAILED = 'FAILED'\\n}\\n\\n/**\\n * Winner status enum\\n */\\nexport enum WinnerStatus {\\n  PENDING_NOTIFICATION = 'PENDING_NOTIFICATION',\\n  NOTIFIED = 'NOTIFIED',\\n  CONFIRMED = 'CONFIRMED',\\n  FORFEITED = 'FORFEITED'\\n}\\n\\n/**\\n * Payment status enum\\n */\\nexport enum PaymentStatus {\\n  PENDING = 'PENDING',\\n  PAID = 'PAID',\\n  FAILED = 'FAILED'\\n}\\n\\n/**\\n * Upload status enum\\n */\\nexport enum UploadStatus {\\n  PENDING = 'PENDING',\\n  PROCESSING = 'PROCESSING',\\n  COMPLETED = 'COMPLETED',\\n  FAILED = 'FAILED'\\n}\\n\\n/**\\n * User role enum\\n */\\nexport enum UserRole {\\n  SUPER_ADMIN = 'SUPER_ADMIN',\\n  ADMIN = 'ADMIN',\\n  SENIOR_USER = 'SENIOR_USER',\\n  WINNERS_REPORT_USER = 'WINNERS_REPORT_USER',\\n  ALL_REPORT_USER = 'ALL_REPORT_USER'\\n}\\n\\n/**\\n * Permission enum\\n */\\nexport enum Permission {\\n  VIEW_DASHBOARD = 'view_dashboard',\\n  EXECUTE_DRAW = 'execute_draw',\\n  MANAGE_DRAWS = 'manage_draws',\\n  MANAGE_PRIZE_STRUCTURES = 'manage_prize_structures',\\n  MANAGE_PARTICIPANTS = 'manage_participants',\\n  UPLOAD_PARTICIPANTS = 'upload_participants',\\n  VIEW_WINNERS = 'view_winners',\\n  MANAGE_WINNERS = 'manage_winners',\\n  MANAGE_USERS = 'manage_users',\\n  RESET_PASSWORDS = 'reset_passwords',\\n  VIEW_REPORTS = 'view_reports',\\n  MANAGE_NOTIFICATIONS = 'manage_notifications'\\n}\\n\\n/**\\n * Pagination parameters\\n */\\nexport interface PaginationParams {\\n  page: number;\\n  pageSize: number;\\n}\\n\",\"// src/services/authManager.ts\\nimport { UserResponse } from '../types/api';\\nimport { UserRole, Permission } from '../types/common';\\n\\n// Local storage keys\\nconst TOKEN_KEY = 'mtn_mega_billion_token';\\nconst USER_KEY = 'mtn_mega_billion_user';\\nconst TOKEN_EXPIRY_KEY = 'mtn_mega_billion_token_expiry';\\nconst REFRESH_TOKEN_KEY = 'mtn_mega_billion_refresh_token';\\nconst PERMISSIONS_KEY = 'mtn_mega_billion_permissions';\\n\\n// Store token in local storage\\nconst storeToken = (token: string): void => {\\n  try {\\n    localStorage.setItem(TOKEN_KEY, token);\\n  } catch (error) {\\n    console.error('Error storing token:', error);\\n  }\\n};\\n\\n// Get token from local storage\\nconst getToken = (): string | null => {\\n  try {\\n    return localStorage.getItem(TOKEN_KEY);\\n  } catch (error) {\\n    console.error('Error retrieving token:', error);\\n    return null;\\n  }\\n};\\n\\n// Store refresh token in local storage\\nconst storeRefreshToken = (refreshToken: string): void => {\\n  try {\\n    localStorage.setItem(REFRESH_TOKEN_KEY, refreshToken);\\n  } catch (error) {\\n    console.error('Error storing refresh token:', error);\\n  }\\n};\\n\\n// Get refresh token from local storage\\nconst getRefreshToken = (): string | null => {\\n  try {\\n    return localStorage.getItem(REFRESH_TOKEN_KEY);\\n  } catch (error) {\\n    console.error('Error retrieving refresh token:', error);\\n    return null;\\n  }\\n};\\n\\n// Store user data in local storage\\nconst storeUser = (user: UserResponse): void => {\\n  try {\\n    localStorage.setItem(USER_KEY, JSON.stringify(user));\\n  } catch (error) {\\n    console.error('Error storing user data:', error);\\n  }\\n};\\n\\n// Get user data from local storage\\nconst getUser = (): UserResponse | null => {\\n  try {\\n    const userData = localStorage.getItem(USER_KEY);\\n    if (userData) {\\n      return JSON.parse(userData);\\n    }\\n  } catch (error) {\\n    console.error('Error parsing user data:', error);\\n  }\\n  return null;\\n};\\n\\n// Store token expiry time\\nconst storeTokenExpiry = (expiryTime: string): void => {\\n  try {\\n    localStorage.setItem(TOKEN_EXPIRY_KEY, expiryTime);\\n  } catch (error) {\\n    console.error('Error storing token expiry:', error);\\n  }\\n};\\n\\n// Get token expiry time\\nconst getTokenExpiry = (): string | null => {\\n  try {\\n    return localStorage.getItem(TOKEN_EXPIRY_KEY);\\n  } catch (error) {\\n    console.error('Error retrieving token expiry:', error);\\n    return null;\\n  }\\n};\\n\\n// Store user permissions\\nconst storePermissions = (permissions: Permission[]): void => {\\n  try {\\n    localStorage.setItem(PERMISSIONS_KEY, JSON.stringify(permissions));\\n  } catch (error) {\\n    console.error('Error storing permissions data:', error);\\n  }\\n};\\n\\n// Get user permissions\\nconst getPermissions = (): Permission[] => {\\n  try {\\n    const permissionsData = localStorage.getItem(PERMISSIONS_KEY);\\n    if (permissionsData) {\\n      return JSON.parse(permissionsData);\\n    }\\n  } catch (error) {\\n    console.error('Error parsing permissions data:', error);\\n  }\\n  return [];\\n};\\n\\n// Check if token is expired\\nconst isTokenExpired = (): boolean => {\\n  const expiryTime = getTokenExpiry();\\n  if (!expiryTime) return true;\\n  \\n  try {\\n    const expiryDate = new Date(expiryTime);\\n    return expiryDate <= new Date();\\n  } catch (error) {\\n    console.error('Error parsing token expiry:', error);\\n    return true;\\n  }\\n};\\n\\n// Clear all auth data from local storage\\nconst clearAuthData = (): void => {\\n  try {\\n    localStorage.removeItem(TOKEN_KEY);\\n    localStorage.removeItem(USER_KEY);\\n    localStorage.removeItem(TOKEN_EXPIRY_KEY);\\n    localStorage.removeItem(REFRESH_TOKEN_KEY);\\n    localStorage.removeItem(PERMISSIONS_KEY);\\n  } catch (error) {\\n    console.error('Error clearing auth data:', error);\\n  }\\n};\\n\\n// Check if user has specific role\\nconst hasRole = (requiredRole: UserRole | UserRole[]): boolean => {\\n  const user = getUser();\\n  if (!user) return false;\\n  \\n  // Convert to array for consistent handling\\n  const requiredRoles = Array.isArray(requiredRole) ? requiredRole : [requiredRole];\\n  \\n  // Ensure user.role is treated as UserRole\\n  const userRole = user.role as UserRole;\\n  \\n  // Super admin has access to everything\\n  if (userRole === UserRole.SUPER_ADMIN) return true;\\n  \\n  // Check if user's role is in the required roles\\n  return requiredRoles.includes(userRole);\\n};\\n\\n// Check specific permissions based on role\\nconst hasPermission = (permission: Permission): boolean => {\\n  // First try to use stored permissions\\n  const permissions = getPermissions();\\n  if (permissions.length > 0) {\\n    return permissions.includes(permission);\\n  }\\n  \\n  const user = getUser();\\n  if (!user) return false;\\n  \\n  // Role-based permission mapping\\n  const rolePermissions: Record<string, Permission[]> = {\\n    [UserRole.SUPER_ADMIN]: [\\n      Permission.VIEW_DASHBOARD, Permission.EXECUTE_DRAW, Permission.MANAGE_DRAWS, Permission.MANAGE_PRIZE_STRUCTURES,\\n      Permission.MANAGE_PARTICIPANTS, Permission.UPLOAD_PARTICIPANTS, Permission.VIEW_WINNERS, Permission.MANAGE_WINNERS,\\n      Permission.MANAGE_USERS, Permission.RESET_PASSWORDS, Permission.VIEW_REPORTS, Permission.MANAGE_NOTIFICATIONS\\n    ],\\n    [UserRole.ADMIN]: [\\n      Permission.VIEW_DASHBOARD, Permission.MANAGE_DRAWS, Permission.MANAGE_PRIZE_STRUCTURES,\\n      Permission.MANAGE_PARTICIPANTS, Permission.UPLOAD_PARTICIPANTS, Permission.VIEW_WINNERS, Permission.MANAGE_WINNERS,\\n      Permission.RESET_PASSWORDS, Permission.VIEW_REPORTS, Permission.MANAGE_NOTIFICATIONS\\n    ],\\n    [UserRole.SENIOR_USER]: [\\n      Permission.VIEW_DASHBOARD, Permission.UPLOAD_PARTICIPANTS, Permission.VIEW_WINNERS,\\n      Permission.VIEW_REPORTS, Permission.MANAGE_NOTIFICATIONS\\n    ],\\n    [UserRole.WINNERS_REPORT_USER]: [\\n      Permission.VIEW_DASHBOARD, Permission.VIEW_WINNERS\\n    ],\\n    [UserRole.ALL_REPORT_USER]: [\\n      Permission.VIEW_DASHBOARD, Permission.VIEW_REPORTS, Permission.MANAGE_NOTIFICATIONS\\n    ]\\n  };\\n  \\n  // Get permissions for user's role\\n  const userPermissions = rolePermissions[user.role] || [];\\n  \\n  // Check if user has the required permission\\n  return userPermissions.includes(permission);\\n};\\n\\n// Check and refresh token if needed\\nconst checkAndRefreshTokenIfNeeded = async (): Promise<boolean> => {\\n  if (isTokenExpired()) {\\n    // This would need to be implemented in coordination with authService\\n    // For now, just return false to indicate refresh is needed\\n    return false;\\n  }\\n  return true;\\n};\\n\\n// Export the auth manager\\nexport const authManager = {\\n  storeToken,\\n  getToken,\\n  storeRefreshToken,\\n  getRefreshToken,\\n  storeUser,\\n  getUser,\\n  storeTokenExpiry,\\n  getTokenExpiry,\\n  storePermissions,\\n  getPermissions,\\n  isTokenExpired,\\n  clearAuthData,\\n  hasRole,\\n  hasPermission,\\n  checkAndRefreshTokenIfNeeded\\n};\\n\\nexport default authManager;\\n\",\"// src/services/apiClient.ts\\nimport axios from 'axios';\\nimport type { AxiosInstance, AxiosRequestConfig, AxiosResponse, CancelTokenSource } from 'axios';\\nimport { authManager } from './authManager';\\nimport { ApiResponse, PaginatedResponse } from '../types/api';\\n\\n// Map to store active requests for cancellation\\nconst activeRequests: Map<string, CancelTokenSource> = new Map();\\n\\n// Create a base axios instance with common configuration\\nconst apiClient: AxiosInstance = axios.create({\\n  baseURL: process.env.REACT_APP_API_BASE_URL || 'https://gp-backend-promo.onrender.com/api/v1',\\n  timeout: 30000, // 30 seconds timeout\\n  headers: {\\n    'Content-Type': 'application/json',\\n    'Accept': 'application/json'\\n  }\\n});\\n\\n// Generate a unique request key\\nconst getRequestKey = (config: AxiosRequestConfig): string => {\\n  return `${config.method || 'unknown'}-${config.url || 'unknown'}-${JSON.stringify(config.params || {})}`;\\n};\\n\\n// Cancel previous identical requests\\nconst cancelPreviousRequests = (config: AxiosRequestConfig): void => {\\n  const requestKey = getRequestKey(config);\\n  if (activeRequests.has(requestKey)) {\\n    const source = activeRequests.get(requestKey);\\n    if (source) {\\n      source.cancel(`Request canceled due to duplicate: ${requestKey}`);\\n      activeRequests.delete(requestKey);\\n    }\\n  }\\n};\\n\\n// Request interceptor for adding auth token and handling cancellation\\napiClient.interceptors.request.use(\\n  (config) => {\\n    // Get token from auth manager\\n    const token = authManager.getToken();\\n    \\n    // If token exists, add it to the Authorization header\\n    if (token) {\\n      // Create a new headers object to avoid modifying read-only properties\\n      config.headers = {\\n        ...config.headers,\\n        'Authorization': `Bearer ${token}`\\n      } as any;\\n      \\n      // Debug logging\\n      console.log(`[API_CLIENT] Adding token to request: ${config.method?.toUpperCase()} ${config.url}`);\\n    } else {\\n      console.warn(`[API_CLIENT] No token available for request: ${config.method?.toUpperCase()} ${config.url}`);\\n    }\\n    \\n    // Enable credentials for CORS\\n    config.withCredentials = true;\\n    \\n    // Handle request cancellation for duplicate requests\\n    if (config.url && !config.url.includes('/auth/login')) {\\n      cancelPreviousRequests(config);\\n      \\n      // Create a new cancel token source\\n      const source = axios.CancelToken.source();\\n      config.cancelToken = source.token;\\n      \\n      // Store the cancel token source\\n      const requestKey = getRequestKey(config);\\n      activeRequests.set(requestKey, source);\\n    }\\n    \\n    return config;\\n  },\\n  (error) => {\\n    console.error('[API_CLIENT] Request interceptor error:', error);\\n    return Promise.reject(error);\\n  }\\n);\\n\\n// Response interceptor for handling common errors and response transformation\\napiClient.interceptors.response.use(\\n  (response) => {\\n    console.log(`[API_CLIENT] Response success: ${response.status} ${response.config.method?.toUpperCase()} ${response.config.url}`);\\n    \\n    // Clean up the active request\\n    if (response.config.url) {\\n      const requestKey = getRequestKey(response.config);\\n      activeRequests.delete(requestKey);\\n    }\\n    \\n    // Transform response data if needed\\n    if (response.data) {\\n      // Check if the response follows the standard API response format\\n      if (typeof response.data.success === 'boolean') {\\n        // Already in the expected format, return as is\\n        return response;\\n      } else {\\n        // Wrap in standard format\\n        response.data = {\\n          success: true,\\n          data: response.data\\n        };\\n      }\\n    }\\n    \\n    return response;\\n  },\\n  (error) => {\\n    // Clean up the active request if it exists\\n    if (error.config && error.config.url) {\\n      const requestKey = getRequestKey(error.config);\\n      activeRequests.delete(requestKey);\\n    }\\n    \\n    // Handle axios cancellation\\n    if (axios.isCancel(error)) {\\n      console.log('[API_CLIENT] Request canceled:', error.message);\\n      return Promise.reject(error);\\n    }\\n    \\n    // Enhanced error logging\\n    if (error.response) {\\n      // The request was made and the server responded with a status code\\n      // that falls out of the range of 2xx\\n      console.error(`[API_CLIENT] Response error: ${error.response.status} ${error.config?.method?.toUpperCase()} ${error.config?.url}`);\\n      console.error('[API_CLIENT] Error data:', error.response.data);\\n      \\n      // Handle 401 Unauthorized errors\\n      if (error.response.status === 401) {\\n        console.warn('[API_CLIENT] Authentication error - token may be invalid or expired');\\n        // Emit an event for auth error handling\\n        const authErrorEvent = new CustomEvent('auth-error', {\\n          detail: { status: error.response.status, message: 'Authentication failed' }\\n        });\\n        window.dispatchEvent(authErrorEvent);\\n      }\\n      \\n      // Transform error response to standard format if needed\\n      if (error.response.data) {\\n        if (typeof error.response.data.success !== 'boolean') {\\n          error.response.data = {\\n            success: false,\\n            error: error.response.data.message || error.message || 'Unknown error',\\n            details: error.response.data\\n          };\\n        }\\n      }\\n    } else if (error.request) {\\n      // The request was made but no response was received\\n      console.error(`[API_CLIENT] Request error - no response: ${error.config?.method?.toUpperCase()} ${error.config?.url}`);\\n      \\n      // Create a standardized error response\\n      error.response = {\\n        data: {\\n          success: false,\\n          error: 'Network error - no response received',\\n          details: 'The server did not respond to the request'\\n        }\\n      };\\n    } else {\\n      // Something happened in setting up the request that triggered an Error\\n      console.error('[API_CLIENT] Request setup error:', error.message);\\n      \\n      // Create a standardized error response\\n      error.response = {\\n        data: {\\n          success: false,\\n          error: 'Request setup error',\\n          details: error.message\\n        }\\n      };\\n    }\\n    \\n    return Promise.reject(error);\\n  }\\n);\\n\\n// Type-safe request methods\\nconst get = async <T>(url: string, params?: any, config?: AxiosRequestConfig): Promise<T> => {\\n  const response = await apiClient.get<ApiResponse<T>>(url, { ...config, params });\\n  return response.data.data as T;\\n};\\n\\nconst getPaginated = async <T>(url: string, params?: any, config?: AxiosRequestConfig): Promise<PaginatedResponse<T>> => {\\n  const response = await apiClient.get<ApiResponse<PaginatedResponse<T>>>(url, { ...config, params });\\n  return response.data.data;\\n};\\n\\nconst post = async <T>(url: string, data?: any, config?: AxiosRequestConfig): Promise<T> => {\\n  const response = await apiClient.post<ApiResponse<T>>(url, data, config);\\n  return response.data.data as T;\\n};\\n\\nconst put = async <T>(url: string, data?: any, config?: AxiosRequestConfig): Promise<T> => {\\n  const response = await apiClient.put<ApiResponse<T>>(url, data, config);\\n  return response.data.data as T;\\n};\\n\\nconst del = async <T>(url: string, config?: AxiosRequestConfig): Promise<T> => {\\n  const response = await apiClient.delete<ApiResponse<T>>(url, config);\\n  return response.data.data as T;\\n};\\n\\n// Helper function to get auth headers\\nconst getAuthHeaders = (): Record<string, string> => {\\n  const token = authManager.getToken();\\n  \\n  if (token) {\\n    return {\\n      'Authorization': `Bearer ${token}`\\n    };\\n  }\\n  \\n  return {};\\n};\\n\\n// Cancel all active requests\\nconst cancelAllRequests = (message = 'Operation canceled by user'): void => {\\n  activeRequests.forEach((source) => {\\n    source.cancel(message);\\n  });\\n  activeRequests.clear();\\n};\\n\\n// Enhanced API client with type-safe methods\\nexport const enhancedApiClient = {\\n  get,\\n  getPaginated,\\n  post,\\n  put,\\n  delete: del,\\n  getAuthHeaders,\\n  cancelAllRequests,\\n  instance: apiClient\\n};\\n\\n// Export both the instance and the enhanced client\\nexport { apiClient, getAuthHeaders };\\n\\n// Default export for backward compatibility\\nexport default enhancedApiClient;\\n\",\"// src/services/authService.ts\\nimport { enhancedApiClient } from './apiClient';\\nimport { authManager } from './authManager';\\nimport { LoginRequest, LoginResponse, UserResponse } from '../types/api';\\nimport { Permission, UserRole } from '../types/common';\\n\\n// Define login credentials interface\\nexport interface LoginCredentials {\\n  username: string;\\n  password: string;\\n}\\n\\n// Main authentication service\\nconst login = async (credentials: LoginCredentials): Promise<LoginResponse> => {\\n  try {\\n    console.log('[AUTH_SERVICE] Sending login request');\\n    \\n    // Transform frontend credentials to match backend API contract\\n    const loginPayload: LoginRequest = {\\n      Email: credentials.username,\\n      Password: credentials.password\\n    };\\n    \\n    // Use the enhanced API client for better error handling\\n    const response = await enhancedApiClient.post<LoginResponse>('/auth/login', loginPayload);\\n    \\n    console.log('[AUTH_SERVICE] Login successful');\\n    \\n    // Store authentication data\\n    if (response.token) {\\n      authManager.storeToken(response.token);\\n      authManager.storeUser(response.user);\\n      if (response.expiry) {\\n        authManager.storeTokenExpiry(response.expiry);\\n      }\\n    }\\n    \\n    return response;\\n  } catch (err: unknown) {\\n    if (err instanceof Error) {\\n      console.error('[AUTH_SERVICE] Login error:', err.message);\\n    } else {\\n      console.error('[AUTH_SERVICE] Login error:', err);\\n    }\\n    throw err;\\n  }\\n};\\n\\n// Check if token needs refresh (within 5 minutes of expiry)\\nconst needsTokenRefresh = (): boolean => {\\n  const expiryTime = authManager.getTokenExpiry();\\n  if (!expiryTime) return false;\\n  \\n  try {\\n    const expiryDate = new Date(expiryTime);\\n    const now = new Date();\\n    \\n    // Check if token expires within 5 minutes\\n    const fiveMinutes = 5 * 60 * 1000;\\n    return expiryDate.getTime() - now.getTime() < fiveMinutes;\\n  } catch (error) {\\n    console.error('[AUTH_SERVICE] Error checking token refresh:', error);\\n    return false;\\n  }\\n};\\n\\n// Refresh token if needed\\nconst refreshTokenIfNeeded = async (): Promise<boolean> => {\\n  if (needsTokenRefresh()) {\\n    try {\\n      const refreshToken = authManager.getRefreshToken();\\n      if (!refreshToken) return false;\\n      \\n      const response = await enhancedApiClient.post<LoginResponse>('/auth/refresh', { refreshToken });\\n      \\n      if (response.token) {\\n        authManager.storeToken(response.token);\\n        if (response.expiry) {\\n          authManager.storeTokenExpiry(response.expiry);\\n        }\\n        return true;\\n      }\\n      return false;\\n    } catch (error) {\\n      console.error('[AUTH_SERVICE] Token refresh error:', error);\\n      authManager.clearAuthData(); // Clear invalid auth data\\n      return false;\\n    }\\n  }\\n  \\n  return true;\\n};\\n\\n// Check authentication state\\nconst checkAuthState = (): boolean => {\\n  const token = authManager.getToken();\\n  return !!token && !authManager.isTokenExpired();\\n};\\n\\n// Get current user\\nconst getCurrentUser = (): UserResponse | null => {\\n  return authManager.getUser();\\n};\\n\\n// Logout function\\nconst logout = (): void => {\\n  authManager.clearAuthData();\\n  \\n  // Emit logout event for components to react\\n  const logoutEvent = new CustomEvent('auth-logout');\\n  window.dispatchEvent(logoutEvent);\\n};\\n\\n// Check if user has specific role\\nconst hasRole = (role: UserRole | UserRole[]): boolean => {\\n  return authManager.hasRole(role);\\n};\\n\\n// Check if user has specific permission\\nconst hasPermission = (permission: Permission): boolean => {\\n  return authManager.hasPermission(permission);\\n};\\n\\n// Export the service\\nexport const authService = {\\n  login,\\n  logout,\\n  checkAuthState,\\n  getCurrentUser,\\n  needsTokenRefresh,\\n  refreshTokenIfNeeded,\\n  hasRole,\\n  hasPermission\\n};\\n\\n// Default export for backward compatibility\\nexport default authService;\\n\",\"// src/contexts/AuthContext.tsx\\nimport React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\\nimport { useNavigate } from 'react-router-dom';\\nimport { authService } from '../services/authService';\\nimport { UserResponse } from '../types/api';\\nimport { Permission, UserRole } from '../types/common';\\n\\n// Define the context shape\\ninterface AuthContextType {\\n  user: UserResponse | null;\\n  isAuthenticated: boolean;\\n  isLoading: boolean;\\n  login: (email: string, password: string) => Promise<void>;\\n  logout: () => void;\\n  hasPermission: (permission: Permission) => boolean;\\n  hasRole: (role: UserRole | UserRole[]) => boolean;\\n}\\n\\n// Create the context with a default value\\nconst AuthContext = createContext<AuthContextType>({\\n  user: null,\\n  isAuthenticated: false,\\n  isLoading: true,\\n  login: async () => {},\\n  logout: () => {},\\n  hasPermission: () => false,\\n  hasRole: () => false\\n});\\n\\n// Custom hook to use the auth context\\nexport const useAuth = () => useContext(AuthContext);\\n\\n// Provider component\\ninterface AuthProviderProps {\\n  children: ReactNode;\\n}\\n\\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\\n  const [user, setUser] = useState<UserResponse | null>(null);\\n  const [isLoading, setIsLoading] = useState(true);\\n  const navigate = useNavigate();\\n\\n  // Check authentication state on mount\\n  useEffect(() => {\\n    const checkAuth = async () => {\\n      try {\\n        const isAuthenticated = authService.checkAuthState();\\n        \\n        if (isAuthenticated) {\\n          // Get current user from auth manager\\n          const currentUser = authService.getCurrentUser();\\n          setUser(currentUser);\\n        }\\n      } catch (error) {\\n        console.error('Auth check error:', error);\\n      } finally {\\n        setIsLoading(false);\\n      }\\n    };\\n    \\n    checkAuth();\\n  }, []);\\n\\n  // Login function\\n  const login = async (email: string, password: string) => {\\n    setIsLoading(true);\\n    \\n    try {\\n      const response = await authService.login({ username: email, password });\\n      setUser(response.user);\\n    } catch (error) {\\n      console.error('Login error:', error);\\n      throw error;\\n    } finally {\\n      setIsLoading(false);\\n    }\\n  };\\n\\n  // Logout function\\n  const logout = () => {\\n    authService.logout();\\n    setUser(null);\\n    navigate('/login');\\n  };\\n\\n  // Check if user has a specific permission\\n  const hasPermission = (permission: Permission): boolean => {\\n    return authService.hasPermission(permission);\\n  };\\n\\n  // Check if user has a specific role\\n  const hasRole = (role: UserRole | UserRole[]): boolean => {\\n    return authService.hasRole(role);\\n  };\\n\\n  // Compute authentication state\\n  const isAuthenticated = !!user;\\n\\n  // Context value\\n  const value = {\\n    user,\\n    isAuthenticated,\\n    isLoading,\\n    login,\\n    logout,\\n    hasPermission,\\n    hasRole\\n  };\\n\\n  return (\\n    <AuthContext.Provider value={value}>\\n      {children}\\n    </AuthContext.Provider>\\n  );\\n};\\n\\nexport default AuthContext;\\n\",\"// src/components/layout/Header/Header.tsx\\nimport React from 'react';\\nimport { useAuth } from '../../../contexts/AuthContext';\\nimport './Header.css';\\n\\nconst Header: React.FC = () => {\\n  const { user, logout } = useAuth();\\n\\n  return (\\n    <header className=\\\"app-header\\\">\\n      <div className=\\\"logo-container\\\">\\n        <h1>MTN Mega Billion Promo</h1>\\n        <span className=\\\"subtitle\\\">Admin Portal</span>\\n      </div>\\n      \\n      <div className=\\\"header-actions\\\">\\n        {user && (\\n          <>\\n            <div className=\\\"user-info\\\">\\n              <span className=\\\"user-name\\\">{user.fullName || user.username}</span>\\n              <span className=\\\"user-role\\\">{user.role}</span>\\n            </div>\\n            <button className=\\\"logout-button\\\" onClick={logout}>\\n              Logout\\n            </button>\\n          </>\\n        )}\\n      </div>\\n    </header>\\n  );\\n};\\n\\nexport default Header;\\n\",\"// src/components/layout/Sidebar/Sidebar.tsx\\nimport React from 'react';\\nimport { NavLink } from 'react-router-dom';\\nimport { useAuth } from '../../../contexts/AuthContext';\\nimport { UserRole } from '../../../types/common';\\nimport './Sidebar.css';\\n\\nconst Sidebar: React.FC = () => {\\n  const { user } = useAuth();\\n  const role = user?.role || '';\\n  \\n  // Define navigation items with role-based access control\\n  const navItems = [\\n    { \\n      path: '/dashboard', \\n      label: 'Dashboard', \\n      icon: 'dashboard',\\n      roles: [UserRole.SUPER_ADMIN, UserRole.ADMIN, UserRole.SENIOR_USER, UserRole.WINNERS_REPORT_USER, UserRole.ALL_REPORT_USER] \\n    },\\n    { \\n      path: '/draw-management', \\n      label: 'Draw Management', \\n      icon: 'casino',\\n      roles: [UserRole.SUPER_ADMIN, UserRole.ADMIN] \\n    },\\n    { \\n      path: '/participant-management', \\n      label: 'Participant Management', \\n      icon: 'people',\\n      roles: [UserRole.SUPER_ADMIN, UserRole.ADMIN, UserRole.SENIOR_USER] \\n    },\\n    { \\n      path: '/prize-structure', \\n      label: 'Prize Structure', \\n      icon: 'emoji_events',\\n      roles: [UserRole.SUPER_ADMIN, UserRole.ADMIN, UserRole.SENIOR_USER] \\n    },\\n    { \\n      path: '/user-management', \\n      label: 'User Management', \\n      icon: 'manage_accounts',\\n      roles: [UserRole.SUPER_ADMIN] \\n    },\\n    { \\n      path: '/reports', \\n      label: 'Reports', \\n      icon: 'assessment',\\n      roles: [UserRole.SUPER_ADMIN, UserRole.ADMIN, UserRole.SENIOR_USER, UserRole.WINNERS_REPORT_USER, UserRole.ALL_REPORT_USER] \\n    }\\n  ];\\n\\n  // Filter navigation items based on user role\\n  const filteredNavItems = navItems.filter(item => \\n    item.roles.includes(role as UserRole) || role === UserRole.SUPER_ADMIN\\n  );\\n\\n  return (\\n    <aside className=\\\"app-sidebar\\\">\\n      <nav className=\\\"sidebar-nav\\\">\\n        <ul>\\n          {filteredNavItems.map((item) => (\\n            <li key={item.path}>\\n              <NavLink \\n                to={item.path} \\n                className={({ isActive }) => isActive ? 'nav-link active' : 'nav-link'}\\n              >\\n                <span className=\\\"material-icons\\\">{item.icon}</span>\\n                <span className=\\\"nav-label\\\">{item.label}</span>\\n              </NavLink>\\n            </li>\\n          ))}\\n        </ul>\\n      </nav>\\n    </aside>\\n  );\\n};\\n\\nexport default Sidebar;\\n\",\"// src/components/layout/AppLayout/AppLayout.tsx\\nimport React from 'react';\\nimport { Outlet } from 'react-router-dom';\\nimport Header from \\\"../Header/Header\\\";\\nimport Sidebar from \\\"../Sidebar/Sidebar\\\";\\nimport './AppLayout.css';\\n\\nconst AppLayout: React.FC = () => {\\n  return (\\n    <div className=\\\"app-layout\\\">\\n      <Header />\\n      <div className=\\\"app-container\\\">\\n        <Sidebar />\\n        <main className=\\\"app-content\\\">\\n          <Outlet />\\n        </main>\\n      </div>\\n    </div>\\n  );\\n};\\n\\nexport default AppLayout;\\n\",\"// src/components/dashboard/MetricCard.tsx\\nimport React from 'react';\\nimport './MetricCard.css';\\n\\ninterface MetricCardProps {\\n  title: string;\\n  value: string | number;\\n  icon: string;\\n  trend?: 'up' | 'down' | 'same';\\n  trendValue?: string;\\n}\\n\\nconst MetricCard: React.FC<MetricCardProps> = ({ \\n  title, \\n  value, \\n  icon, \\n  trend = 'same',\\n  trendValue = '0%'\\n}) => {\\n  return (\\n    <div className=\\\"metric-card\\\">\\n      <div className=\\\"metric-icon\\\">\\n        <span className=\\\"material-icons\\\">{icon}</span>\\n      </div>\\n      <div className=\\\"metric-content\\\">\\n        <h3 className=\\\"metric-title\\\">{title}</h3>\\n        <div className=\\\"metric-value\\\">{value}</div>\\n        {trend && (\\n          <div className={`metric-trend ${trend}`}>\\n            <span className=\\\"material-icons\\\">\\n              {trend === 'up' ? 'trending_up' : trend === 'down' ? 'trending_down' : 'trending_flat'}\\n            </span>\\n            <span className=\\\"trend-value\\\">{trendValue}</span>\\n          </div>\\n        )}\\n      </div>\\n    </div>\\n  );\\n};\\n\\nexport default MetricCard;\\n\",\"// src/components/dashboard/ActivityFeed/ActivityFeed.tsx\\nimport React from 'react';\\nimport './ActivityFeed.css';\\n\\nexport interface ActivityItem {\\n  id: string | number;\\n  type: 'draw' | 'upload' | 'user' | 'prize';\\n  action?: string;\\n  description?: string;\\n  user: string;\\n  timestamp: string;\\n  details?: string;\\n}\\n\\ninterface ActivityFeedProps {\\n  activities?: ActivityItem[];\\n}\\n\\nconst ActivityFeed: React.FC<ActivityFeedProps> = ({ activities: propActivities }) => {\\n  // Mock activity data - in a real implementation, this would come from an API\\n  const defaultActivities: ActivityItem[] = [\\n    {\\n      id: '1',\\n      type: 'draw',\\n      action: 'Draw Executed',\\n      user: 'John Admin',\\n      timestamp: '2025-05-28T10:30:00',\\n      details: 'Daily Draw #24 with 1,250 participants'\\n    },\\n    {\\n      id: '2',\\n      type: 'upload',\\n      action: 'Participants Uploaded',\\n      user: 'Sarah Manager',\\n      timestamp: '2025-05-28T09:15:00',\\n      details: '2,500 new participants added'\\n    },\\n    {\\n      id: '3',\\n      type: 'prize',\\n      action: 'Prize Structure Updated',\\n      user: 'John Admin',\\n      timestamp: '2025-05-27T16:45:00',\\n      details: 'Added 2 new prize tiers'\\n    },\\n    {\\n      id: '4',\\n      type: 'user',\\n      action: 'User Created',\\n      user: 'Super Admin',\\n      timestamp: '2025-05-27T14:20:00',\\n      details: 'New admin user \\\"Sarah Manager\\\" added'\\n    },\\n    {\\n      id: '5',\\n      type: 'draw',\\n      action: 'Draw Scheduled',\\n      user: 'John Admin',\\n      timestamp: '2025-05-27T11:10:00',\\n      details: 'Weekly Draw #4 scheduled for 2025-05-30'\\n    }\\n  ];\\n\\n  // Use provided activities or fall back to default\\n  const activities = propActivities || defaultActivities;\\n\\n  // Function to get icon based on activity type\\n  const getActivityIcon = (type: string): string => {\\n    switch (type) {\\n      case 'draw':\\n        return 'casino';\\n      case 'upload':\\n        return 'upload_file';\\n      case 'user':\\n        return 'person';\\n      case 'prize':\\n        return 'emoji_events';\\n      default:\\n        return 'info';\\n    }\\n  };\\n\\n  // Function to format timestamp\\n  const formatTimestamp = (timestamp: string): string => {\\n    const date = new Date(timestamp);\\n    return new Intl.DateTimeFormat('en-US', {\\n      month: 'short',\\n      day: 'numeric',\\n      hour: '2-digit',\\n      minute: '2-digit'\\n    }).format(date);\\n  };\\n\\n  return (\\n    <div className=\\\"activity-feed\\\">\\n      {activities.length === 0 ? (\\n        <div className=\\\"no-activity\\\">\\n          <span className=\\\"material-icons\\\">history</span>\\n          <p>No recent activity</p>\\n        </div>\\n      ) : (\\n        <ul className=\\\"activity-list\\\">\\n          {activities.map((activity) => (\\n            <li key={activity.id.toString()} className=\\\"activity-item\\\">\\n              <div className={`activity-icon ${activity.type}`}>\\n                <span className=\\\"material-icons\\\">{getActivityIcon(activity.type)}</span>\\n              </div>\\n              <div className=\\\"activity-content\\\">\\n                <div className=\\\"activity-header\\\">\\n                  <span className=\\\"activity-action\\\">{activity.action || activity.description}</span>\\n                  <span className=\\\"activity-time\\\">{formatTimestamp(activity.timestamp)}</span>\\n                </div>\\n                <div className=\\\"activity-user\\\">by {activity.user}</div>\\n                {activity.details && <div className=\\\"activity-details\\\">{activity.details}</div>}\\n              </div>\\n            </li>\\n          ))}\\n        </ul>\\n      )}\\n      <div className=\\\"view-all-container\\\">\\n        <button className=\\\"view-all-button\\\">View All Activity</button>\\n      </div>\\n    </div>\\n  );\\n};\\n\\nexport default ActivityFeed;\\n\",\"// src/components/dashboard/StatusIndicator/StatusIndicator.tsx\\nimport React from 'react';\\nimport './StatusIndicator.css';\\n\\nexport type SystemStatus = 'operational' | 'maintenance' | 'issue';\\n\\ninterface StatusIndicatorProps {\\n  status: SystemStatus;\\n  name?: string;\\n  lastUpdated?: string;\\n}\\n\\nconst StatusIndicator: React.FC<StatusIndicatorProps> = ({ status, name, lastUpdated }) => {\\n  const getStatusInfo = () => {\\n    switch (status) {\\n      case 'operational':\\n        return {\\n          label: name ? `${name}: Operational` : 'All Systems Operational',\\n          icon: 'check_circle',\\n          description: 'All services are running normally.'\\n        };\\n      case 'maintenance':\\n        return {\\n          label: name ? `${name}: Maintenance` : 'Scheduled Maintenance',\\n          icon: 'engineering',\\n          description: 'Some services may be temporarily unavailable due to scheduled maintenance.'\\n        };\\n      case 'issue':\\n        return {\\n          label: name ? `${name}: Issue Detected` : 'System Issues Detected',\\n          icon: 'error',\\n          description: 'We are currently experiencing some technical difficulties. Our team is working to resolve them.'\\n        };\\n      default:\\n        return {\\n          label: 'Status Unknown',\\n          icon: 'help',\\n          description: 'Unable to determine system status.'\\n        };\\n    }\\n  };\\n\\n  const statusInfo = getStatusInfo();\\n\\n  return (\\n    <div className={`status-indicator ${status}`}>\\n      <div className=\\\"status-icon\\\">\\n        <span className=\\\"material-icons\\\">{statusInfo.icon}</span>\\n      </div>\\n      <div className=\\\"status-content\\\">\\n        <h4 className=\\\"status-label\\\">{statusInfo.label}</h4>\\n        <p className=\\\"status-description\\\">{statusInfo.description}</p>\\n        {lastUpdated && <p className=\\\"status-timestamp\\\">Last updated: {lastUpdated}</p>}\\n      </div>\\n    </div>\\n  );\\n};\\n\\nexport default StatusIndicator;\\n\",\"// src/pages/Dashboard.tsx\\nimport React, { useEffect, useState } from 'react';\\nimport { useAuth } from '../../contexts/AuthContext';\\nimport MetricCard from \\\"../../components/dashboard/MetricCard/MetricCard\\\";\\nimport ActivityFeed from \\\"../../components/dashboard/ActivityFeed/ActivityFeed\\\";\\nimport StatusIndicator from '../../components/dashboard/StatusIndicator/StatusIndicator';\\nimport './Dashboard.css';\\n\\ninterface DashboardMetrics {\\n  totalDraws: number;\\n  activeDraws: number;\\n  totalParticipants: number;\\n  totalWinners: number;\\n  systemStatus: 'operational' | 'maintenance' | 'issue';\\n}\\n\\nconst Dashboard: React.FC = () => {\\n  const { user } = useAuth();\\n  const [metrics, setMetrics] = useState<DashboardMetrics>({\\n    totalDraws: 0,\\n    activeDraws: 0,\\n    totalParticipants: 0,\\n    totalWinners: 0,\\n    systemStatus: 'operational'\\n  });\\n  const [loading, setLoading] = useState(true);\\n\\n  useEffect(() => {\\n    // In a real implementation, this would fetch data from the API\\n    // For now, we'll simulate loading with mock data\\n    const fetchDashboardData = async () => {\\n      try {\\n        setLoading(true);\\n        // Simulate API call\\n        await new Promise(resolve => setTimeout(resolve, 1000));\\n        \\n        // Mock data\\n        setMetrics({\\n          totalDraws: 24,\\n          activeDraws: 2,\\n          totalParticipants: 15782,\\n          totalWinners: 342,\\n          systemStatus: 'operational'\\n        });\\n      } catch (error) {\\n        console.error('Error fetching dashboard data:', error);\\n      } finally {\\n        setLoading(false);\\n      }\\n    };\\n\\n    fetchDashboardData();\\n  }, []);\\n\\n  return (\\n    <div className=\\\"dashboard-container\\\">\\n      <div className=\\\"dashboard-header\\\">\\n        <h2>Welcome, {user?.fullName || user?.username || 'Admin'}</h2>\\n        <p className=\\\"dashboard-subtitle\\\">MTN Mega Billion Promo Admin Portal Dashboard</p>\\n      </div>\\n\\n      {loading ? (\\n        <div className=\\\"loading-container\\\">\\n          <div className=\\\"loading-spinner\\\"></div>\\n          <p>Loading dashboard data...</p>\\n        </div>\\n      ) : (\\n        <>\\n          <div className=\\\"metrics-container\\\">\\n            <MetricCard \\n              title=\\\"Total Draws\\\" \\n              value={metrics.totalDraws} \\n              icon=\\\"casino\\\" \\n              trend=\\\"up\\\" \\n              trendValue=\\\"8%\\\" \\n            />\\n            <MetricCard \\n              title=\\\"Active Draws\\\" \\n              value={metrics.activeDraws} \\n              icon=\\\"event_available\\\" \\n              trend=\\\"same\\\" \\n              trendValue=\\\"0%\\\" \\n            />\\n            <MetricCard \\n              title=\\\"Total Participants\\\" \\n              value={metrics.totalParticipants.toLocaleString()} \\n              icon=\\\"people\\\" \\n              trend=\\\"up\\\" \\n              trendValue=\\\"12%\\\" \\n            />\\n            <MetricCard \\n              title=\\\"Total Winners\\\" \\n              value={metrics.totalWinners.toLocaleString()} \\n              icon=\\\"emoji_events\\\" \\n              trend=\\\"up\\\" \\n              trendValue=\\\"5%\\\" \\n            />\\n          </div>\\n\\n          <div className=\\\"dashboard-content\\\">\\n            <div className=\\\"dashboard-section\\\">\\n              <h3>System Status</h3>\\n              <StatusIndicator status={metrics.systemStatus} />\\n            </div>\\n\\n            <div className=\\\"dashboard-section\\\">\\n              <h3>Recent Activity</h3>\\n              <ActivityFeed />\\n            </div>\\n          </div>\\n\\n          <div className=\\\"dashboard-footer\\\">\\n            <div className=\\\"quick-actions\\\">\\n              <h3>Quick Actions</h3>\\n              <div className=\\\"action-buttons\\\">\\n                <button className=\\\"action-button\\\">\\n                  <span className=\\\"material-icons\\\">add</span>\\n                  New Draw\\n                </button>\\n                <button className=\\\"action-button\\\">\\n                  <span className=\\\"material-icons\\\">upload_file</span>\\n                  Upload Participants\\n                </button>\\n                <button className=\\\"action-button\\\">\\n                  <span className=\\\"material-icons\\\">leaderboard</span>\\n                  View Reports\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n        </>\\n      )}\\n    </div>\\n  );\\n};\\n\\nexport default Dashboard;\\n\",\"// src/pages/DrawManagementPage.tsx\\nimport React, { useState, useEffect } from 'react';\\nimport './DrawManagementPage.css';\\n\\n// This is a placeholder component that will be fully implemented\\n// with real data integration and API alignment in step 004\\nconst DrawManagementPage: React.FC = () => {\\n  const [loading, setLoading] = useState(true);\\n  \\n  useEffect(() => {\\n    // Simulate API loading\\n    const timer = setTimeout(() => {\\n      setLoading(false);\\n    }, 1000);\\n    \\n    return () => clearTimeout(timer);\\n  }, []);\\n  \\n  return (\\n    <div className=\\\"draw-management-container\\\">\\n      <div className=\\\"page-header\\\">\\n        <h2>Draw Management</h2>\\n        <p className=\\\"page-subtitle\\\">Configure and execute draws</p>\\n      </div>\\n      \\n      {loading ? (\\n        <div className=\\\"loading-container\\\">\\n          <div className=\\\"loading-spinner\\\"></div>\\n          <p>Loading draw management data...</p>\\n        </div>\\n      ) : (\\n        <div className=\\\"draw-management-content\\\">\\n          <div className=\\\"info-card\\\">\\n            <div className=\\\"info-icon\\\">\\n              <span className=\\\"material-icons\\\">info</span>\\n            </div>\\n            <div className=\\\"info-content\\\">\\n              <h3>Draw Management Coming Soon</h3>\\n              <p>This feature is currently being implemented. Check back soon for the ability to configure and execute draws with real-time participant data.</p>\\n            </div>\\n          </div>\\n        </div>\\n      )}\\n    </div>\\n  );\\n};\\n\\nexport default DrawManagementPage;\\n\",\"// src/pages/LoginPage.tsx\\nimport React, { useState } from 'react';\\nimport { useNavigate } from 'react-router-dom';\\nimport { useAuth } from '../../contexts/AuthContext';\\nimport './LoginPage.css';\\n\\nconst LoginPage: React.FC = () => {\\n  const [email, setEmail] = useState('');\\n  const [password, setPassword] = useState('');\\n  const [error, setError] = useState<string | null>(null);\\n  const [loading, setLoading] = useState(false);\\n  const { login } = useAuth();\\n  const navigate = useNavigate();\\n\\n  const handleSubmit = async (e: React.FormEvent) => {\\n    e.preventDefault();\\n    \\n    // Basic validation\\n    if (!email.trim()) {\\n      setError('Email is required');\\n      return;\\n    }\\n    \\n    if (!password.trim()) {\\n      setError('Password is required');\\n      return;\\n    }\\n    \\n    try {\\n      setError(null);\\n      setLoading(true);\\n      \\n      // Call login function from auth context\\n      await login(email, password);\\n      \\n      // Redirect to dashboard on successful login\\n      navigate('/dashboard');\\n    } catch (err: any) {\\n      console.error('Login error:', err);\\n      setError(err.message || 'Failed to login. Please check your credentials and try again.');\\n    } finally {\\n      setLoading(false);\\n    }\\n  };\\n\\n  return (\\n    <div className=\\\"login-container\\\">\\n      <div className=\\\"login-card\\\">\\n        <div className=\\\"login-header\\\">\\n          <h1>MTN Mega Billion Promo</h1>\\n          <p className=\\\"login-subtitle\\\">Admin Portal</p>\\n        </div>\\n        \\n        <form className=\\\"login-form\\\" onSubmit={handleSubmit}>\\n          {error && <div className=\\\"login-error\\\">{error}</div>}\\n          \\n          <div className=\\\"form-group\\\">\\n            <label htmlFor=\\\"email\\\">Email</label>\\n            <input\\n              type=\\\"email\\\"\\n              id=\\\"email\\\"\\n              value={email}\\n              onChange={(e) => setEmail(e.target.value)}\\n              placeholder=\\\"Enter your email\\\"\\n              disabled={loading}\\n            />\\n          </div>\\n          \\n          <div className=\\\"form-group\\\">\\n            <label htmlFor=\\\"password\\\">Password</label>\\n            <input\\n              type=\\\"password\\\"\\n              id=\\\"password\\\"\\n              value={password}\\n              onChange={(e) => setPassword(e.target.value)}\\n              placeholder=\\\"Enter your password\\\"\\n              disabled={loading}\\n            />\\n          </div>\\n          \\n          <button \\n            type=\\\"submit\\\" \\n            className=\\\"login-button\\\"\\n            disabled={loading}\\n          >\\n            {loading ? 'Logging in...' : 'Login'}\\n          </button>\\n        </form>\\n      </div>\\n    </div>\\n  );\\n};\\n\\nexport default LoginPage;\\n\",\"// src/pages/NotFoundPage.tsx\\nimport React from 'react';\\nimport { Link } from 'react-router-dom';\\nimport './NotFoundPage.css';\\n\\nconst NotFoundPage: React.FC = () => {\\n  return (\\n    <div className=\\\"not-found-container\\\">\\n      <div className=\\\"not-found-content\\\">\\n        <div className=\\\"not-found-icon\\\">\\n          <span className=\\\"material-icons\\\">error_outline</span>\\n        </div>\\n        <h1>404</h1>\\n        <h2>Page Not Found</h2>\\n        <p>The page you are looking for doesn't exist or has been moved.</p>\\n        <Link to=\\\"/dashboard\\\" className=\\\"back-button\\\">\\n          <span className=\\\"material-icons\\\">arrow_back</span>\\n          Back to Dashboard\\n        </Link>\\n      </div>\\n    </div>\\n  );\\n};\\n\\nexport default NotFoundPage;\\n\",\"// src/pages/ParticipantManagementPage.tsx\\nimport React, { useState, useEffect } from 'react';\\nimport './ParticipantManagementPage.css';\\n\\n// This is a placeholder component that will be fully implemented\\n// with real data integration and API alignment in step 005\\nconst ParticipantManagementPage: React.FC = () => {\\n  const [loading, setLoading] = useState(true);\\n  \\n  useEffect(() => {\\n    // Simulate API loading\\n    const timer = setTimeout(() => {\\n      setLoading(false);\\n    }, 1000);\\n    \\n    return () => clearTimeout(timer);\\n  }, []);\\n  \\n  return (\\n    <div className=\\\"participant-management-container\\\">\\n      <div className=\\\"page-header\\\">\\n        <h2>Participant Management</h2>\\n        <p className=\\\"page-subtitle\\\">Upload and manage participant data</p>\\n      </div>\\n      \\n      {loading ? (\\n        <div className=\\\"loading-container\\\">\\n          <div className=\\\"loading-spinner\\\"></div>\\n          <p>Loading participant management data...</p>\\n        </div>\\n      ) : (\\n        <div className=\\\"participant-management-content\\\">\\n          <div className=\\\"info-card\\\">\\n            <div className=\\\"info-icon\\\">\\n              <span className=\\\"material-icons\\\">info</span>\\n            </div>\\n            <div className=\\\"info-content\\\">\\n              <h3>Participant Management Coming Soon</h3>\\n              <p>This feature is currently being implemented. Check back soon for the ability to upload and manage participant data with CSV validation and audit trail.</p>\\n            </div>\\n          </div>\\n        </div>\\n      )}\\n    </div>\\n  );\\n};\\n\\nexport default ParticipantManagementPage;\\n\",\"// src/pages/PrizeStructurePage.tsx\\nimport React, { useState, useEffect } from 'react';\\nimport './PrizeStructurePage.css';\\n\\n// This is a placeholder component that will be fully implemented\\n// with real data integration and API alignment in step 006\\nconst PrizeStructurePage: React.FC = () => {\\n  const [loading, setLoading] = useState(true);\\n  \\n  useEffect(() => {\\n    // Simulate API loading\\n    const timer = setTimeout(() => {\\n      setLoading(false);\\n    }, 1000);\\n    \\n    return () => clearTimeout(timer);\\n  }, []);\\n  \\n  return (\\n    <div className=\\\"prize-structure-container\\\">\\n      <div className=\\\"page-header\\\">\\n        <h2>Prize Structure Management</h2>\\n        <p className=\\\"page-subtitle\\\">Configure and manage prize structures</p>\\n      </div>\\n      \\n      {loading ? (\\n        <div className=\\\"loading-container\\\">\\n          <div className=\\\"loading-spinner\\\"></div>\\n          <p>Loading prize structure data...</p>\\n        </div>\\n      ) : (\\n        <div className=\\\"prize-structure-content\\\">\\n          <div className=\\\"info-card\\\">\\n            <div className=\\\"info-icon\\\">\\n              <span className=\\\"material-icons\\\">info</span>\\n            </div>\\n            <div className=\\\"info-content\\\">\\n              <h3>Prize Structure Management Coming Soon</h3>\\n              <p>This feature is currently being implemented. Check back soon for the ability to create and manage day-specific prize structures with winner and runner-up configurations.</p>\\n            </div>\\n          </div>\\n        </div>\\n      )}\\n    </div>\\n  );\\n};\\n\\nexport default PrizeStructurePage;\\n\",\"// src/pages/ReportsPage.tsx\\nimport React, { useState, useEffect } from 'react';\\nimport './ReportsPage.css';\\n\\n// This is a placeholder component that will be fully implemented\\n// with real data integration and API alignment in a future step\\nconst ReportsPage: React.FC = () => {\\n  const [loading, setLoading] = useState(true);\\n  \\n  useEffect(() => {\\n    // Simulate API loading\\n    const timer = setTimeout(() => {\\n      setLoading(false);\\n    }, 1000);\\n    \\n    return () => clearTimeout(timer);\\n  }, []);\\n  \\n  return (\\n    <div className=\\\"reports-container\\\">\\n      <div className=\\\"page-header\\\">\\n        <h2>Reports</h2>\\n        <p className=\\\"page-subtitle\\\">View and export system reports</p>\\n      </div>\\n      \\n      {loading ? (\\n        <div className=\\\"loading-container\\\">\\n          <div className=\\\"loading-spinner\\\"></div>\\n          <p>Loading reports data...</p>\\n        </div>\\n      ) : (\\n        <div className=\\\"reports-content\\\">\\n          <div className=\\\"info-card\\\">\\n            <div className=\\\"info-icon\\\">\\n              <span className=\\\"material-icons\\\">info</span>\\n            </div>\\n            <div className=\\\"info-content\\\">\\n              <h3>Reports Coming Soon</h3>\\n              <p>This feature is currently being implemented. Check back soon for the ability to view and export various system reports including winners, participants, and draw history.</p>\\n            </div>\\n          </div>\\n        </div>\\n      )}\\n    </div>\\n  );\\n};\\n\\nexport default ReportsPage;\\n\",\"// src/pages/UserManagementPage.tsx\\nimport React, { useState, useEffect } from 'react';\\nimport './UserManagementPage.css';\\n\\n// This is a placeholder component that will be fully implemented\\n// with real data integration and API alignment in a future step\\nconst UserManagementPage: React.FC = () => {\\n  const [loading, setLoading] = useState(true);\\n  \\n  useEffect(() => {\\n    // Simulate API loading\\n    const timer = setTimeout(() => {\\n      setLoading(false);\\n    }, 1000);\\n    \\n    return () => clearTimeout(timer);\\n  }, []);\\n  \\n  return (\\n    <div className=\\\"user-management-container\\\">\\n      <div className=\\\"page-header\\\">\\n        <h2>User Management</h2>\\n        <p className=\\\"page-subtitle\\\">Manage admin users and permissions</p>\\n      </div>\\n      \\n      {loading ? (\\n        <div className=\\\"loading-container\\\">\\n          <div className=\\\"loading-spinner\\\"></div>\\n          <p>Loading user management data...</p>\\n        </div>\\n      ) : (\\n        <div className=\\\"user-management-content\\\">\\n          <div className=\\\"info-card\\\">\\n            <div className=\\\"info-icon\\\">\\n              <span className=\\\"material-icons\\\">info</span>\\n            </div>\\n            <div className=\\\"info-content\\\">\\n              <h3>User Management Coming Soon</h3>\\n              <p>This feature is currently being implemented. Check back soon for the ability to create, edit, and manage admin users with role-based permissions.</p>\\n            </div>\\n          </div>\\n        </div>\\n      )}\\n    </div>\\n  );\\n};\\n\\nexport default UserManagementPage;\\n\",\"// src/App.tsx\\nimport React from 'react';\\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\\nimport { AuthProvider, useAuth } from './contexts/AuthContext';\\nimport AppLayout from './components/layout/AppLayout/AppLayout';\\n\\nimport Dashboard from './pages/Dashboard/Dashboard';\\nimport DrawManagement from './pages/DrawManagement/DrawManagementPage';\\nimport Login from './pages/Login/LoginPage';\\nimport NotFound from './pages/NotFound/NotFoundPage';\\nimport ParticipantManagement from './pages/ParticipantManagement/ParticipantManagementPage';\\nimport PrizeStructure from './pages/PrizeStructure/PrizeStructurePage';\\nimport Reports from './pages/Reports/ReportsPage';\\nimport UserManagement from './pages/UserManagement/UserManagementPage';\\nimport './App.css';\\n\\n// Protected route component\\nconst ProtectedRoute: React.FC<{ element: React.ReactNode }> = ({ element }) => {\\n  const { isAuthenticated, isLoading } = useAuth();\\n  \\n  if (isLoading) {\\n    return <div className=\\\"loading-screen\\\">Loading...</div>;\\n  }\\n  \\n  return isAuthenticated ? <>{element}</> : <Navigate to=\\\"/login\\\" />;\\n};\\n\\nconst App: React.FC = () => {\\n  return (\\n    <AuthProvider>\\n      <Router>\\n        <Routes>\\n          <Route path=\\\"/login\\\" element={<Login />} />\\n          \\n          <Route path=\\\"/\\\" element={<ProtectedRoute element={<AppLayout />} />}>\\n            <Route index element={<Navigate to=\\\"/dashboard\\\" replace />} />\\n            <Route path=\\\"dashboard\\\" element={<Dashboard />} />\\n            <Route path=\\\"draw-management\\\" element={<DrawManagement />} />\\n            <Route path=\\\"participant-management\\\" element={<ParticipantManagement />} />\\n            <Route path=\\\"prize-structure\\\" element={<PrizeStructure />} />\\n            <Route path=\\\"user-management\\\" element={<UserManagement />} />\\n            <Route path=\\\"reports\\\" element={<Reports />} />\\n          </Route>\\n          \\n          <Route path=\\\"*\\\" element={<NotFound />} />\\n        </Routes>\\n      </Router>\\n    </AuthProvider>\\n  );\\n};\\n\\nexport default App;\\n\",\"import React from 'react';\\r\\nimport ReactDOM from 'react-dom/client';\\r\\nimport './index.css';\\r\\nimport App from './App';\\r\\n\\r\\nconst root = ReactDOM.createRoot(\\r\\n  document.getElementById('root') as HTMLElement\\r\\n);\\r\\n\\r\\nroot.render(\\r\\n  <React.StrictMode>\\r\\n    <App />\\r\\n  </React.StrictMode>\\r\\n);\\r\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,,,,,,,,,,,,,function(e,a,t){e.exports=t(41)},,,,,,function(e,a,t){},,,,,function(e,a,t){},function(e,a,t){},function(e,a,t){},function(e,a,t){},function(e,a,t){},function(e,a,t){},function(e,a,t){},function(e,a,t){},function(e,a,t){},function(e,a,t){},function(e,a,t){},function(e,a,t){},function(e,a,t){},function(e,a,t){},function(e,a,t){},function(e,a,t){\"use strict\";t.r(a);var n=t(0),r=t.n(n),s=t(14),c=t.n(s),l=(t(21),t(2)),o=t(6),i=t(5),m=t(43);let u=function(e){return e.SUPER_ADMIN=\"SUPER_ADMIN\",e.ADMIN=\"ADMIN\",e.SENIOR_USER=\"SENIOR_USER\",e.WINNERS_REPORT_USER=\"WINNERS_REPORT_USER\",e.ALL_REPORT_USER=\"ALL_REPORT_USER\",e}({}),d=function(e){return e.VIEW_DASHBOARD=\"view_dashboard\",e.EXECUTE_DRAW=\"execute_draw\",e.MANAGE_DRAWS=\"manage_draws\",e.MANAGE_PRIZE_STRUCTURES=\"manage_prize_structures\",e.MANAGE_PARTICIPANTS=\"manage_participants\",e.UPLOAD_PARTICIPANTS=\"upload_participants\",e.VIEW_WINNERS=\"view_winners\",e.MANAGE_WINNERS=\"manage_winners\",e.MANAGE_USERS=\"manage_users\",e.RESET_PASSWORDS=\"reset_passwords\",e.VIEW_REPORTS=\"view_reports\",e.MANAGE_NOTIFICATIONS=\"manage_notifications\",e}({});const E=\"mtn_mega_billion_token\",p=\"mtn_mega_billion_user\",g=()=>{try{const a=localStorage.getItem(p);if(a)return JSON.parse(a)}catch(e){console.error(\"Error parsing user data:\",e)}return null},N=()=>{try{return localStorage.getItem(\"mtn_mega_billion_token_expiry\")}catch(e){return console.error(\"Error retrieving token expiry:\",e),null}},h=()=>{try{const a=localStorage.getItem(\"mtn_mega_billion_permissions\");if(a)return JSON.parse(a)}catch(e){console.error(\"Error parsing permissions data:\",e)}return[]},v=()=>{const e=N();if(!e)return!0;try{return new Date(e)<=new Date}catch(a){return console.error(\"Error parsing token expiry:\",a),!0}},_={storeToken:e=>{try{localStorage.setItem(E,e)}catch(a){console.error(\"Error storing token:\",a)}},getToken:()=>{try{return localStorage.getItem(E)}catch(e){return console.error(\"Error retrieving token:\",e),null}},storeRefreshToken:e=>{try{localStorage.setItem(\"mtn_mega_billion_refresh_token\",e)}catch(a){console.error(\"Error storing refresh token:\",a)}},getRefreshToken:()=>{try{return localStorage.getItem(\"mtn_mega_billion_refresh_token\")}catch(e){return console.error(\"Error retrieving refresh token:\",e),null}},storeUser:e=>{try{localStorage.setItem(p,JSON.stringify(e))}catch(a){console.error(\"Error storing user data:\",a)}},getUser:g,storeTokenExpiry:e=>{try{localStorage.setItem(\"mtn_mega_billion_token_expiry\",e)}catch(a){console.error(\"Error storing token expiry:\",a)}},getTokenExpiry:N,storePermissions:e=>{try{localStorage.setItem(\"mtn_mega_billion_permissions\",JSON.stringify(e))}catch(a){console.error(\"Error storing permissions data:\",a)}},getPermissions:h,isTokenExpired:v,clearAuthData:()=>{try{localStorage.removeItem(E),localStorage.removeItem(p),localStorage.removeItem(\"mtn_mega_billion_token_expiry\"),localStorage.removeItem(\"mtn_mega_billion_refresh_token\"),localStorage.removeItem(\"mtn_mega_billion_permissions\")}catch(e){console.error(\"Error clearing auth data:\",e)}},hasRole:e=>{const a=g();if(!a)return!1;const t=Array.isArray(e)?e:[e],n=a.role;return n===u.SUPER_ADMIN||t.includes(n)},hasPermission:e=>{const a=h();if(a.length>0)return a.includes(e);const t=g();return!!t&&({[u.SUPER_ADMIN]:[d.VIEW_DASHBOARD,d.EXECUTE_DRAW,d.MANAGE_DRAWS,d.MANAGE_PRIZE_STRUCTURES,d.MANAGE_PARTICIPANTS,d.UPLOAD_PARTICIPANTS,d.VIEW_WINNERS,d.MANAGE_WINNERS,d.MANAGE_USERS,d.RESET_PASSWORDS,d.VIEW_REPORTS,d.MANAGE_NOTIFICATIONS],[u.ADMIN]:[d.VIEW_DASHBOARD,d.MANAGE_DRAWS,d.MANAGE_PRIZE_STRUCTURES,d.MANAGE_PARTICIPANTS,d.UPLOAD_PARTICIPANTS,d.VIEW_WINNERS,d.MANAGE_WINNERS,d.RESET_PASSWORDS,d.VIEW_REPORTS,d.MANAGE_NOTIFICATIONS],[u.SENIOR_USER]:[d.VIEW_DASHBOARD,d.UPLOAD_PARTICIPANTS,d.VIEW_WINNERS,d.VIEW_REPORTS,d.MANAGE_NOTIFICATIONS],[u.WINNERS_REPORT_USER]:[d.VIEW_DASHBOARD,d.VIEW_WINNERS],[u.ALL_REPORT_USER]:[d.VIEW_DASHBOARD,d.VIEW_REPORTS,d.MANAGE_NOTIFICATIONS]}[t.role]||[]).includes(e)},checkAndRefreshTokenIfNeeded:async()=>!v()};const S=new Map,A=m.a.create({baseURL:Object({NODE_ENV:\"production\",PUBLIC_URL:\"\"}).REACT_APP_API_BASE_URL||\"https://gp-backend-promo.onrender.com/api/v1\",timeout:3e4,headers:{\"Content-Type\":\"application/json\",Accept:\"application/json\"}}),f=e=>\"\".concat(e.method||\"unknown\",\"-\").concat(e.url||\"unknown\",\"-\").concat(JSON.stringify(e.params||{}));A.interceptors.request.use(e=>{const a=_.getToken();var t,n;a?(e.headers=Object(i.a)(Object(i.a)({},e.headers),{},{Authorization:\"Bearer \".concat(a)}),console.log(\"[API_CLIENT] Adding token to request: \".concat(null===(t=e.method)||void 0===t?void 0:t.toUpperCase(),\" \").concat(e.url))):console.warn(\"[API_CLIENT] No token available for request: \".concat(null===(n=e.method)||void 0===n?void 0:n.toUpperCase(),\" \").concat(e.url));if(e.withCredentials=!0,e.url&&!e.url.includes(\"/auth/login\")){(e=>{const a=f(e);if(S.has(a)){const e=S.get(a);e&&(e.cancel(\"Request canceled due to duplicate: \".concat(a)),S.delete(a))}})(e);const a=m.a.CancelToken.source();e.cancelToken=a.token;const t=f(e);S.set(t,a)}return e},e=>(console.error(\"[API_CLIENT] Request interceptor error:\",e),Promise.reject(e))),A.interceptors.response.use(e=>{var a;if(console.log(\"[API_CLIENT] Response success: \".concat(e.status,\" \").concat(null===(a=e.config.method)||void 0===a?void 0:a.toUpperCase(),\" \").concat(e.config.url)),e.config.url){const a=f(e.config);S.delete(a)}if(e.data){if(\"boolean\"===typeof e.data.success)return e;e.data={success:!0,data:e.data}}return e},e=>{if(e.config&&e.config.url){const a=f(e.config);S.delete(a)}if(m.a.isCancel(e))return console.log(\"[API_CLIENT] Request canceled:\",e.message),Promise.reject(e);if(e.response){var a,t,n;if(console.error(\"[API_CLIENT] Response error: \".concat(e.response.status,\" \").concat(null===(a=e.config)||void 0===a?void 0:null===(t=a.method)||void 0===t?void 0:t.toUpperCase(),\" \").concat(null===(n=e.config)||void 0===n?void 0:n.url)),console.error(\"[API_CLIENT] Error data:\",e.response.data),401===e.response.status){console.warn(\"[API_CLIENT] Authentication error - token may be invalid or expired\");const a=new CustomEvent(\"auth-error\",{detail:{status:e.response.status,message:\"Authentication failed\"}});window.dispatchEvent(a)}e.response.data&&\"boolean\"!==typeof e.response.data.success&&(e.response.data={success:!1,error:e.response.data.message||e.message||\"Unknown error\",details:e.response.data})}else if(e.request){var r,s,c;console.error(\"[API_CLIENT] Request error - no response: \".concat(null===(r=e.config)||void 0===r?void 0:null===(s=r.method)||void 0===s?void 0:s.toUpperCase(),\" \").concat(null===(c=e.config)||void 0===c?void 0:c.url)),e.response={data:{success:!1,error:\"Network error - no response received\",details:\"The server did not respond to the request\"}}}else console.error(\"[API_CLIENT] Request setup error:\",e.message),e.response={data:{success:!1,error:\"Request setup error\",details:e.message}};return Promise.reject(e)});const R={get:async(e,a,t)=>{return(await A.get(e,Object(i.a)(Object(i.a)({},t),{},{params:a}))).data.data},getPaginated:async(e,a,t)=>{return(await A.get(e,Object(i.a)(Object(i.a)({},t),{},{params:a}))).data.data},post:async(e,a,t)=>{return(await A.post(e,a,t)).data.data},put:async(e,a,t)=>{return(await A.put(e,a,t)).data.data},delete:async(e,a)=>{return(await A.delete(e,a)).data.data},getAuthHeaders:()=>{const e=_.getToken();return e?{Authorization:\"Bearer \".concat(e)}:{}},cancelAllRequests:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"Operation canceled by user\";S.forEach(a=>{a.cancel(e)}),S.clear()},instance:A};const b=()=>{const e=_.getTokenExpiry();if(!e)return!1;try{const t=new Date(e),n=new Date,r=3e5;return t.getTime()-n.getTime()<r}catch(a){return console.error(\"[AUTH_SERVICE] Error checking token refresh:\",a),!1}},I={login:async e=>{try{console.log(\"[AUTH_SERVICE] Sending login request\");const t={Email:e.username,Password:e.password},n=await R.post(\"/auth/login\",t);return console.log(\"[AUTH_SERVICE] Login successful\"),n.token&&(_.storeToken(n.token),_.storeUser(n.user),n.expiry&&_.storeTokenExpiry(n.expiry)),n}catch(a){throw a instanceof Error?console.error(\"[AUTH_SERVICE] Login error:\",a.message):console.error(\"[AUTH_SERVICE] Login error:\",a),a}},logout:()=>{_.clearAuthData();const e=new CustomEvent(\"auth-logout\");window.dispatchEvent(e)},checkAuthState:()=>{return!!_.getToken()&&!_.isTokenExpired()},getCurrentUser:()=>_.getUser(),needsTokenRefresh:b,refreshTokenIfNeeded:async()=>{if(b())try{const a=_.getRefreshToken();if(!a)return!1;const t=await R.post(\"/auth/refresh\",{refreshToken:a});return!!t.token&&(_.storeToken(t.token),t.expiry&&_.storeTokenExpiry(t.expiry),!0)}catch(e){return console.error(\"[AUTH_SERVICE] Token refresh error:\",e),_.clearAuthData(),!1}return!0},hasRole:e=>_.hasRole(e),hasPermission:e=>_.hasPermission(e)};const y=Object(n.createContext)({user:null,isAuthenticated:!1,isLoading:!0,login:async()=>{},logout:()=>{},hasPermission:()=>!1,hasRole:()=>!1}),T=()=>Object(n.useContext)(y),w=e=>{let{children:a}=e;const[t,s]=Object(n.useState)(null),[c,o]=Object(n.useState)(!0),i=Object(l.r)();Object(n.useEffect)(()=>{(async()=>{try{if(I.checkAuthState()){const e=I.getCurrentUser();s(e)}}catch(e){console.error(\"Auth check error:\",e)}finally{o(!1)}})()},[]);const m={user:t,isAuthenticated:!!t,isLoading:c,login:async(e,a)=>{o(!0);try{const n=await I.login({username:e,password:a});s(n.user)}catch(t){throw console.error(\"Login error:\",t),t}finally{o(!1)}},logout:()=>{I.logout(),s(null),i(\"/login\")},hasPermission:e=>I.hasPermission(e),hasRole:e=>I.hasRole(e)};return r.a.createElement(y.Provider,{value:m},a)};t(26);var P=()=>{const{user:e,logout:a}=T();return r.a.createElement(\"header\",{className:\"app-header\"},r.a.createElement(\"div\",{className:\"logo-container\"},r.a.createElement(\"h1\",null,\"MTN Mega Billion Promo\"),r.a.createElement(\"span\",{className:\"subtitle\"},\"Admin Portal\")),r.a.createElement(\"div\",{className:\"header-actions\"},e&&r.a.createElement(r.a.Fragment,null,r.a.createElement(\"div\",{className:\"user-info\"},r.a.createElement(\"span\",{className:\"user-name\"},e.fullName||e.username),r.a.createElement(\"span\",{className:\"user-role\"},e.role)),r.a.createElement(\"button\",{className:\"logout-button\",onClick:a},\"Logout\"))))};t(27);var O=()=>{const{user:e}=T(),a=(null===e||void 0===e?void 0:e.role)||\"\",t=[{path:\"/dashboard\",label:\"Dashboard\",icon:\"dashboard\",roles:[u.SUPER_ADMIN,u.ADMIN,u.SENIOR_USER,u.WINNERS_REPORT_USER,u.ALL_REPORT_USER]},{path:\"/draw-management\",label:\"Draw Management\",icon:\"casino\",roles:[u.SUPER_ADMIN,u.ADMIN]},{path:\"/participant-management\",label:\"Participant Management\",icon:\"people\",roles:[u.SUPER_ADMIN,u.ADMIN,u.SENIOR_USER]},{path:\"/prize-structure\",label:\"Prize Structure\",icon:\"emoji_events\",roles:[u.SUPER_ADMIN,u.ADMIN,u.SENIOR_USER]},{path:\"/user-management\",label:\"User Management\",icon:\"manage_accounts\",roles:[u.SUPER_ADMIN]},{path:\"/reports\",label:\"Reports\",icon:\"assessment\",roles:[u.SUPER_ADMIN,u.ADMIN,u.SENIOR_USER,u.WINNERS_REPORT_USER,u.ALL_REPORT_USER]}].filter(e=>e.roles.includes(a)||a===u.SUPER_ADMIN);return r.a.createElement(\"aside\",{className:\"app-sidebar\"},r.a.createElement(\"nav\",{className:\"sidebar-nav\"},r.a.createElement(\"ul\",null,t.map(e=>r.a.createElement(\"li\",{key:e.path},r.a.createElement(o.c,{to:e.path,className:e=>{let{isActive:a}=e;return a?\"nav-link active\":\"nav-link\"}},r.a.createElement(\"span\",{className:\"material-icons\"},e.icon),r.a.createElement(\"span\",{className:\"nav-label\"},e.label)))))))};t(28);var k=()=>r.a.createElement(\"div\",{className:\"app-layout\"},r.a.createElement(P,null),r.a.createElement(\"div\",{className:\"app-container\"},r.a.createElement(O,null),r.a.createElement(\"main\",{className:\"app-content\"},r.a.createElement(l.b,null))));t(29);var D=e=>{let{title:a,value:t,icon:n,trend:s=\"same\",trendValue:c=\"0%\"}=e;return r.a.createElement(\"div\",{className:\"metric-card\"},r.a.createElement(\"div\",{className:\"metric-icon\"},r.a.createElement(\"span\",{className:\"material-icons\"},n)),r.a.createElement(\"div\",{className:\"metric-content\"},r.a.createElement(\"h3\",{className:\"metric-title\"},a),r.a.createElement(\"div\",{className:\"metric-value\"},t),s&&r.a.createElement(\"div\",{className:\"metric-trend \".concat(s)},r.a.createElement(\"span\",{className:\"material-icons\"},\"up\"===s?\"trending_up\":\"down\"===s?\"trending_down\":\"trending_flat\"),r.a.createElement(\"span\",{className:\"trend-value\"},c))))};t(30);var U=e=>{let{activities:a}=e;const t=a||[{id:\"1\",type:\"draw\",action:\"Draw Executed\",user:\"John Admin\",timestamp:\"2025-05-28T10:30:00\",details:\"Daily Draw #24 with 1,250 participants\"},{id:\"2\",type:\"upload\",action:\"Participants Uploaded\",user:\"Sarah Manager\",timestamp:\"2025-05-28T09:15:00\",details:\"2,500 new participants added\"},{id:\"3\",type:\"prize\",action:\"Prize Structure Updated\",user:\"John Admin\",timestamp:\"2025-05-27T16:45:00\",details:\"Added 2 new prize tiers\"},{id:\"4\",type:\"user\",action:\"User Created\",user:\"Super Admin\",timestamp:\"2025-05-27T14:20:00\",details:'New admin user \"Sarah Manager\" added'},{id:\"5\",type:\"draw\",action:\"Draw Scheduled\",user:\"John Admin\",timestamp:\"2025-05-27T11:10:00\",details:\"Weekly Draw #4 scheduled for 2025-05-30\"}];return r.a.createElement(\"div\",{className:\"activity-feed\"},0===t.length?r.a.createElement(\"div\",{className:\"no-activity\"},r.a.createElement(\"span\",{className:\"material-icons\"},\"history\"),r.a.createElement(\"p\",null,\"No recent activity\")):r.a.createElement(\"ul\",{className:\"activity-list\"},t.map(e=>r.a.createElement(\"li\",{key:e.id.toString(),className:\"activity-item\"},r.a.createElement(\"div\",{className:\"activity-icon \".concat(e.type)},r.a.createElement(\"span\",{className:\"material-icons\"},(e=>{switch(e){case\"draw\":return\"casino\";case\"upload\":return\"upload_file\";case\"user\":return\"person\";case\"prize\":return\"emoji_events\";default:return\"info\"}})(e.type))),r.a.createElement(\"div\",{className:\"activity-content\"},r.a.createElement(\"div\",{className:\"activity-header\"},r.a.createElement(\"span\",{className:\"activity-action\"},e.action||e.description),r.a.createElement(\"span\",{className:\"activity-time\"},(e=>{const a=new Date(e);return new Intl.DateTimeFormat(\"en-US\",{month:\"short\",day:\"numeric\",hour:\"2-digit\",minute:\"2-digit\"}).format(a)})(e.timestamp))),r.a.createElement(\"div\",{className:\"activity-user\"},\"by \",e.user),e.details&&r.a.createElement(\"div\",{className:\"activity-details\"},e.details))))),r.a.createElement(\"div\",{className:\"view-all-container\"},r.a.createElement(\"button\",{className:\"view-all-button\"},\"View All Activity\")))};t(31);var C=e=>{let{status:a,name:t,lastUpdated:n}=e;const s=(()=>{switch(a){case\"operational\":return{label:t?\"\".concat(t,\": Operational\"):\"All Systems Operational\",icon:\"check_circle\",description:\"All services are running normally.\"};case\"maintenance\":return{label:t?\"\".concat(t,\": Maintenance\"):\"Scheduled Maintenance\",icon:\"engineering\",description:\"Some services may be temporarily unavailable due to scheduled maintenance.\"};case\"issue\":return{label:t?\"\".concat(t,\": Issue Detected\"):\"System Issues Detected\",icon:\"error\",description:\"We are currently experiencing some technical difficulties. Our team is working to resolve them.\"};default:return{label:\"Status Unknown\",icon:\"help\",description:\"Unable to determine system status.\"}}})();return r.a.createElement(\"div\",{className:\"status-indicator \".concat(a)},r.a.createElement(\"div\",{className:\"status-icon\"},r.a.createElement(\"span\",{className:\"material-icons\"},s.icon)),r.a.createElement(\"div\",{className:\"status-content\"},r.a.createElement(\"h4\",{className:\"status-label\"},s.label),r.a.createElement(\"p\",{className:\"status-description\"},s.description),n&&r.a.createElement(\"p\",{className:\"status-timestamp\"},\"Last updated: \",n)))};t(32);var M=()=>{const{user:e}=T(),[a,t]=Object(n.useState)({totalDraws:0,activeDraws:0,totalParticipants:0,totalWinners:0,systemStatus:\"operational\"}),[s,c]=Object(n.useState)(!0);return Object(n.useEffect)(()=>{(async()=>{try{c(!0),await new Promise(e=>setTimeout(e,1e3)),t({totalDraws:24,activeDraws:2,totalParticipants:15782,totalWinners:342,systemStatus:\"operational\"})}catch(e){console.error(\"Error fetching dashboard data:\",e)}finally{c(!1)}})()},[]),r.a.createElement(\"div\",{className:\"dashboard-container\"},r.a.createElement(\"div\",{className:\"dashboard-header\"},r.a.createElement(\"h2\",null,\"Welcome, \",(null===e||void 0===e?void 0:e.fullName)||(null===e||void 0===e?void 0:e.username)||\"Admin\"),r.a.createElement(\"p\",{className:\"dashboard-subtitle\"},\"MTN Mega Billion Promo Admin Portal Dashboard\")),s?r.a.createElement(\"div\",{className:\"loading-container\"},r.a.createElement(\"div\",{className:\"loading-spinner\"}),r.a.createElement(\"p\",null,\"Loading dashboard data...\")):r.a.createElement(r.a.Fragment,null,r.a.createElement(\"div\",{className:\"metrics-container\"},r.a.createElement(D,{title:\"Total Draws\",value:a.totalDraws,icon:\"casino\",trend:\"up\",trendValue:\"8%\"}),r.a.createElement(D,{title:\"Active Draws\",value:a.activeDraws,icon:\"event_available\",trend:\"same\",trendValue:\"0%\"}),r.a.createElement(D,{title:\"Total Participants\",value:a.totalParticipants.toLocaleString(),icon:\"people\",trend:\"up\",trendValue:\"12%\"}),r.a.createElement(D,{title:\"Total Winners\",value:a.totalWinners.toLocaleString(),icon:\"emoji_events\",trend:\"up\",trendValue:\"5%\"})),r.a.createElement(\"div\",{className:\"dashboard-content\"},r.a.createElement(\"div\",{className:\"dashboard-section\"},r.a.createElement(\"h3\",null,\"System Status\"),r.a.createElement(C,{status:a.systemStatus})),r.a.createElement(\"div\",{className:\"dashboard-section\"},r.a.createElement(\"h3\",null,\"Recent Activity\"),r.a.createElement(U,null))),r.a.createElement(\"div\",{className:\"dashboard-footer\"},r.a.createElement(\"div\",{className:\"quick-actions\"},r.a.createElement(\"h3\",null,\"Quick Actions\"),r.a.createElement(\"div\",{className:\"action-buttons\"},r.a.createElement(\"button\",{className:\"action-button\"},r.a.createElement(\"span\",{className:\"material-icons\"},\"add\"),\"New Draw\"),r.a.createElement(\"button\",{className:\"action-button\"},r.a.createElement(\"span\",{className:\"material-icons\"},\"upload_file\"),\"Upload Participants\"),r.a.createElement(\"button\",{className:\"action-button\"},r.a.createElement(\"span\",{className:\"material-icons\"},\"leaderboard\"),\"View Reports\"))))))};t(33);var L=()=>{const[e,a]=Object(n.useState)(!0);return Object(n.useEffect)(()=>{const e=setTimeout(()=>{a(!1)},1e3);return()=>clearTimeout(e)},[]),r.a.createElement(\"div\",{className:\"draw-management-container\"},r.a.createElement(\"div\",{className:\"page-header\"},r.a.createElement(\"h2\",null,\"Draw Management\"),r.a.createElement(\"p\",{className:\"page-subtitle\"},\"Configure and execute draws\")),e?r.a.createElement(\"div\",{className:\"loading-container\"},r.a.createElement(\"div\",{className:\"loading-spinner\"}),r.a.createElement(\"p\",null,\"Loading draw management data...\")):r.a.createElement(\"div\",{className:\"draw-management-content\"},r.a.createElement(\"div\",{className:\"info-card\"},r.a.createElement(\"div\",{className:\"info-icon\"},r.a.createElement(\"span\",{className:\"material-icons\"},\"info\")),r.a.createElement(\"div\",{className:\"info-content\"},r.a.createElement(\"h3\",null,\"Draw Management Coming Soon\"),r.a.createElement(\"p\",null,\"This feature is currently being implemented. Check back soon for the ability to configure and execute draws with real-time participant data.\")))))};t(34);var W=()=>{const[e,a]=Object(n.useState)(\"\"),[t,s]=Object(n.useState)(\"\"),[c,o]=Object(n.useState)(null),[i,m]=Object(n.useState)(!1),{login:u}=T(),d=Object(l.r)();return r.a.createElement(\"div\",{className:\"login-container\"},r.a.createElement(\"div\",{className:\"login-card\"},r.a.createElement(\"div\",{className:\"login-header\"},r.a.createElement(\"h1\",null,\"MTN Mega Billion Promo\"),r.a.createElement(\"p\",{className:\"login-subtitle\"},\"Admin Portal\")),r.a.createElement(\"form\",{className:\"login-form\",onSubmit:async a=>{if(a.preventDefault(),e.trim())if(t.trim())try{o(null),m(!0),await u(e,t),d(\"/dashboard\")}catch(n){console.error(\"Login error:\",n),o(n.message||\"Failed to login. Please check your credentials and try again.\")}finally{m(!1)}else o(\"Password is required\");else o(\"Email is required\")}},c&&r.a.createElement(\"div\",{className:\"login-error\"},c),r.a.createElement(\"div\",{className:\"form-group\"},r.a.createElement(\"label\",{htmlFor:\"email\"},\"Email\"),r.a.createElement(\"input\",{type:\"email\",id:\"email\",value:e,onChange:e=>a(e.target.value),placeholder:\"Enter your email\",disabled:i})),r.a.createElement(\"div\",{className:\"form-group\"},r.a.createElement(\"label\",{htmlFor:\"password\"},\"Password\"),r.a.createElement(\"input\",{type:\"password\",id:\"password\",value:t,onChange:e=>s(e.target.value),placeholder:\"Enter your password\",disabled:i})),r.a.createElement(\"button\",{type:\"submit\",className:\"login-button\",disabled:i},i?\"Logging in...\":\"Login\"))))};t(35);var j=()=>r.a.createElement(\"div\",{className:\"not-found-container\"},r.a.createElement(\"div\",{className:\"not-found-content\"},r.a.createElement(\"div\",{className:\"not-found-icon\"},r.a.createElement(\"span\",{className:\"material-icons\"},\"error_outline\")),r.a.createElement(\"h1\",null,\"404\"),r.a.createElement(\"h2\",null,\"Page Not Found\"),r.a.createElement(\"p\",null,\"The page you are looking for doesn't exist or has been moved.\"),r.a.createElement(o.b,{to:\"/dashboard\",className:\"back-button\"},r.a.createElement(\"span\",{className:\"material-icons\"},\"arrow_back\"),\"Back to Dashboard\")));t(36);var V=()=>{const[e,a]=Object(n.useState)(!0);return Object(n.useEffect)(()=>{const e=setTimeout(()=>{a(!1)},1e3);return()=>clearTimeout(e)},[]),r.a.createElement(\"div\",{className:\"participant-management-container\"},r.a.createElement(\"div\",{className:\"page-header\"},r.a.createElement(\"h2\",null,\"Participant Management\"),r.a.createElement(\"p\",{className:\"page-subtitle\"},\"Upload and manage participant data\")),e?r.a.createElement(\"div\",{className:\"loading-container\"},r.a.createElement(\"div\",{className:\"loading-spinner\"}),r.a.createElement(\"p\",null,\"Loading participant management data...\")):r.a.createElement(\"div\",{className:\"participant-management-content\"},r.a.createElement(\"div\",{className:\"info-card\"},r.a.createElement(\"div\",{className:\"info-icon\"},r.a.createElement(\"span\",{className:\"material-icons\"},\"info\")),r.a.createElement(\"div\",{className:\"info-content\"},r.a.createElement(\"h3\",null,\"Participant Management Coming Soon\"),r.a.createElement(\"p\",null,\"This feature is currently being implemented. Check back soon for the ability to upload and manage participant data with CSV validation and audit trail.\")))))};t(37);var x=()=>{const[e,a]=Object(n.useState)(!0);return Object(n.useEffect)(()=>{const e=setTimeout(()=>{a(!1)},1e3);return()=>clearTimeout(e)},[]),r.a.createElement(\"div\",{className:\"prize-structure-container\"},r.a.createElement(\"div\",{className:\"page-header\"},r.a.createElement(\"h2\",null,\"Prize Structure Management\"),r.a.createElement(\"p\",{className:\"page-subtitle\"},\"Configure and manage prize structures\")),e?r.a.createElement(\"div\",{className:\"loading-container\"},r.a.createElement(\"div\",{className:\"loading-spinner\"}),r.a.createElement(\"p\",null,\"Loading prize structure data...\")):r.a.createElement(\"div\",{className:\"prize-structure-content\"},r.a.createElement(\"div\",{className:\"info-card\"},r.a.createElement(\"div\",{className:\"info-icon\"},r.a.createElement(\"span\",{className:\"material-icons\"},\"info\")),r.a.createElement(\"div\",{className:\"info-content\"},r.a.createElement(\"h3\",null,\"Prize Structure Management Coming Soon\"),r.a.createElement(\"p\",null,\"This feature is currently being implemented. Check back soon for the ability to create and manage day-specific prize structures with winner and runner-up configurations.\")))))};t(38);var G=()=>{const[e,a]=Object(n.useState)(!0);return Object(n.useEffect)(()=>{const e=setTimeout(()=>{a(!1)},1e3);return()=>clearTimeout(e)},[]),r.a.createElement(\"div\",{className:\"reports-container\"},r.a.createElement(\"div\",{className:\"page-header\"},r.a.createElement(\"h2\",null,\"Reports\"),r.a.createElement(\"p\",{className:\"page-subtitle\"},\"View and export system reports\")),e?r.a.createElement(\"div\",{className:\"loading-container\"},r.a.createElement(\"div\",{className:\"loading-spinner\"}),r.a.createElement(\"p\",null,\"Loading reports data...\")):r.a.createElement(\"div\",{className:\"reports-content\"},r.a.createElement(\"div\",{className:\"info-card\"},r.a.createElement(\"div\",{className:\"info-icon\"},r.a.createElement(\"span\",{className:\"material-icons\"},\"info\")),r.a.createElement(\"div\",{className:\"info-content\"},r.a.createElement(\"h3\",null,\"Reports Coming Soon\"),r.a.createElement(\"p\",null,\"This feature is currently being implemented. Check back soon for the ability to view and export various system reports including winners, participants, and draw history.\")))))};t(39);var z=()=>{const[e,a]=Object(n.useState)(!0);return Object(n.useEffect)(()=>{const e=setTimeout(()=>{a(!1)},1e3);return()=>clearTimeout(e)},[]),r.a.createElement(\"div\",{className:\"user-management-container\"},r.a.createElement(\"div\",{className:\"page-header\"},r.a.createElement(\"h2\",null,\"User Management\"),r.a.createElement(\"p\",{className:\"page-subtitle\"},\"Manage admin users and permissions\")),e?r.a.createElement(\"div\",{className:\"loading-container\"},r.a.createElement(\"div\",{className:\"loading-spinner\"}),r.a.createElement(\"p\",null,\"Loading user management data...\")):r.a.createElement(\"div\",{className:\"user-management-content\"},r.a.createElement(\"div\",{className:\"info-card\"},r.a.createElement(\"div\",{className:\"info-icon\"},r.a.createElement(\"span\",{className:\"material-icons\"},\"info\")),r.a.createElement(\"div\",{className:\"info-content\"},r.a.createElement(\"h3\",null,\"User Management Coming Soon\"),r.a.createElement(\"p\",null,\"This feature is currently being implemented. Check back soon for the ability to create, edit, and manage admin users with role-based permissions.\")))))};t(40);const q=e=>{let{element:a}=e;const{isAuthenticated:t,isLoading:n}=T();return n?r.a.createElement(\"div\",{className:\"loading-screen\"},\"Loading...\"):t?r.a.createElement(r.a.Fragment,null,a):r.a.createElement(l.a,{to:\"/login\"})};var B=()=>r.a.createElement(w,null,r.a.createElement(o.a,null,r.a.createElement(l.e,null,r.a.createElement(l.c,{path:\"/login\",element:r.a.createElement(W,null)}),r.a.createElement(l.c,{path:\"/\",element:r.a.createElement(q,{element:r.a.createElement(k,null)})},r.a.createElement(l.c,{index:!0,element:r.a.createElement(l.a,{to:\"/dashboard\",replace:!0})}),r.a.createElement(l.c,{path:\"dashboard\",element:r.a.createElement(M,null)}),r.a.createElement(l.c,{path:\"draw-management\",element:r.a.createElement(L,null)}),r.a.createElement(l.c,{path:\"participant-management\",element:r.a.createElement(V,null)}),r.a.createElement(l.c,{path:\"prize-structure\",element:r.a.createElement(x,null)}),r.a.createElement(l.c,{path:\"user-management\",element:r.a.createElement(z,null)}),r.a.createElement(l.c,{path:\"reports\",element:r.a.createElement(G,null)})),r.a.createElement(l.c,{path:\"*\",element:r.a.createElement(j,null)}))));c.a.createRoot(document.getElementById(\"root\")).render(r.a.createElement(r.a.StrictMode,null,r.a.createElement(B,null)))}],[[15,1,2]]]);","extractedComments":[]}